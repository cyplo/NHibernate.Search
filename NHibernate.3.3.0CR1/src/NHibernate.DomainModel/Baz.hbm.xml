<?xml version="1.0"?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="false"
				   assembly="NHibernate.DomainModel"
				   namespace="NHibernate.DomainModel">
	<class
		name="Baz"
		table="`baz baz baz`"
	>
		<id
			name="Code"
			type="String"
		>
			<column
				name="baz_id"
				length="32"
			/>
			<generator class="uuid.hex"/>
		</id>
		<property
			name="Count"
			column="count_count"
			type="Int32"
		/>
		<property
			name="Name"
			column="name_b"
		/>
		<many-to-one
			name="Foo"
			outer-join="true"
			class="Foo"
		/>

		<list
			name="StringList"
			table="string_list"
			batch-size="3"
		>
			<key>
				<column
					name="id"
					length="16"
				/>
			</key>
			<index column="`i`"/>
			<element
				column="element"
				type="String"
			/>
		</list>
		<primitive-array
			name="IntArray"
			table="int_array"
		>
			<key>
				<column
					name="id"
					length="16"
				/>
			</key>
			<index column="i"/>
			<element
				column="j"
				type="Int32"
			/>
		</primitive-array>
		<set
			name="FooSet"
			lazy="true"
			order-by="string_"
			batch-size="3"
		>
			<key>
				<column
					name="baz_id"
					length="16"
				/>
			</key>
			<one-to-many
				class="Foo"
			/>
		</set>
		<array
			name="Components"
			table="bazcomponents"
		>
			<key>
				<column
					name="baz_id"
					length="16"
				/>
			</key>
			<index column="i"/>
			<composite-element
				class="FooComponent"
			>
				<parent name="Baz"/>
				<property name="Name">
					<column
						name="name"
						length="56"
					/>
				</property>
				<property
					name="Count"
					column="count_"
					type="Int32"
				/>
				<nested-composite-element
					name="Subcomponent"
					class="FooComponent"
				>
					<property name="Name" column="x_"/>
					<property name="Count" column="y_" type="Int32"/>
				</nested-composite-element>
			</composite-element>
		</array>
		<array name="TimeArray">
			<key>
				<column name="baz_id" length="16"/>
			</key>
			<index column="j"/>
			<element column="the_time" type="time"/>
		</array>
		<bag
			name="Bag"
			order-by="`name!`"
			table="`$%^^b a g`"
		>
			<key>
				<column
					name="`baz_id@#$`"
					length="16"
				/>
			</key>
			<element
				column="`name!`"
				type="String"
			/>
		</bag>
		<map name="FooToGlarch">
			<key>
				<column
					name="baz_id"
					length="16"
				/>
			</key>
			<index-many-to-many
				column="foo_id"
				class="Foo"
			/>
			<many-to-many
				column="glarch_id"
				class="Glarch"
			/>
		</map>
		<map name="FooComponentToFoo">
			<!--<cache usage="read-write"/>-->
			<key>
				<column
					name="baz_id"
					length="16"
				/>
			</key>
			<composite-index
				class="FooComponent"
			>
				<key-property
					name="Name"
					length="32"
				/>
				<key-property
					name="Count"
					column="count_"
					type="Int32"
				/>
			</composite-index>
			<many-to-many
				column="foo_id"
				class="Foo"
				outer-join="true"
			/>
		</map>
		<map name="GlarchToFoo">
			<key>
				<column name="gtf_baz_id" length="16"/>
			</key>
			<index-many-to-many column="gtf_foo_id" class="Foo"/>
			<one-to-many class="Glarch"/>
		</map>

		<set
			name="StringSet"
			lazy="true"
			sort="StringComparator"
			batch-size="3"
		>
			<key column="id_"/>
			<element column="element" type="String" not-null="true" length="32"/>
		</set>

		<map name="StringDateMap" lazy="true" sort="ReverseComparator">
			<key column="id_"/>
			<index column="map_key" type="String" length="32"/>
			<element column="map_value" type="DateTime"/>
		</map>

		<array name="FooArray" element-class="FooProxy" where="i&lt;8">
			<!--<cache usage="read-write"/>-->
			<key column="id_"/>
			<index column="i"/>
			<many-to-many class="Foo" fetch="select">
				<column name="foo" length="36"/>
			</many-to-many>
		</array>

		<bag name="FooBag" lazy="true" table="baz_foo" cascade="all-delete-orphan" inverse="false">
			<key column="baz"/>
			<many-to-many class="Foo" column="foo" outer-join="true"/>
		</bag>

		<idbag name="IdFooBag" lazy="true" table="baz_id_foo" cascade="all">
			<collection-id column="pkid" type="Int64">
				<generator class="hilo"/>
			</collection-id>
			<key column="baz"/>
			<many-to-many class="Foo" column="foo" outer-join="true"/>
		</idbag>

		<idbag name="ByteBag" lazy="true" table="baz_byte_bag" cascade="all">
			<collection-id column="pkid" type="Int64">
				<generator class="hilo"/>
			</collection-id>
			<key column="baz"/>
			<element type="Byte[]" column="bytez" not-null="true"/>
		</idbag>

		<array name="StringArray">
			<key column="id_"/>
			<index column="i"/>
			<element column="name" type="String"/>
		</array>

		<list name="Fees" lazy="true" cascade="all">
			<key column="bazid"/>
			<index column="bazind"/>
			<one-to-many class="Fee"/>
		</list>

		<list name="Customs">
			<key column="id_"/>
			<index column="indx"/>
			<element type="NHibernate.DomainModel.DoubleStringType, NHibernate.DomainModel">
				<column name="first_"/>
				<column name="second_"/>
			</element>
		</list>

		<list name="TopComponents" table="topcomponents">
			<!--<cache usage="read-write"/>-->
			<key column="id_"/>
			<index column="i"/>
			<composite-element class="FooComponent">
				<property name="Name"/>
				<property name="Count" column="count_" type="Int32"/>
			</composite-element>
		</list>

		<set name="TopFoos">
			<key column="idtopbar" />
			<one-to-many class = "Bar"/>
		</set>

		<set name="CascadingBars" cascade="all-delete-orphan">
			<key column="idofbaz" />
			<one-to-many class = "Bar"/>
		</set>

		<map name="TopGlarchez">
			<key column="idtopglarch" />
			<index column="mapkey" type="Char" length="1"/>
			<!-- 
				added length for NH because a Char does not have a direct DbType.Char but instead
				uses DbType.String so it defaults to 255 if 1 is not found.
			-->
			<one-to-many class = "Glarch"/>
		</map>

		<set name="Cached" sort="natural" table="cached_set">
			<!--<cache usage="read-write"/>-->
			<key column="baz"/>
			<composite-element class="CompositeElement">
				<property name="Foo"/>
				<property name="Bar"/>
			</composite-element>
		</set>

		<map name="CachedMap" sort="natural" table="cached_map">
			<!--<cache usage="read-write"/>-->
			<key column="baz"/>
			<index-many-to-many column="another_baz" class="Baz"/>
			<composite-element class="CompositeElement">
				<property name="Foo"/>
				<property name="Bar"/>
			</composite-element>
		</map>

		<map name="StringGlarchMap" where="baz_map_index &gt; 'a' and tha_key is not null" cascade="all">
			<key column="baz_map_id"/>
			<index column="baz_map_index" type="String"/>
			<one-to-many class="Glarch"/>
		</map>

		<map name="AnyToAny" lazy="true">
			<key column="baz"/>
			<index-many-to-any id-type="Int64">
				<column name="ind_clazz_"/>
				<column name="ind_id_"/>
			</index-many-to-any>
			<many-to-any id-type="Int64">
				<column name="el_clazz_"/>
				<column name="el_id_"/>
			</many-to-any>
		</map>

		<list name="ManyToAny" lazy="true">
			<key column="baz"/>
			<index column="ind"/>
			<many-to-any id-type="string">
				<column name="el_clazz_"/>
				<column name="el_id_"/>
			</many-to-any>
		</list>

		<bag name="Bazez" lazy="true" order-by="name_b desc" cascade="all">
			<key column="`baz id`"/>
			<one-to-many class="Baz"/>
		</bag>

		<set name="Sortablez" sort="natural" cascade="all">
			<key column="baz"/>
			<one-to-many class="Sortable"/>
		</set>

		<bag name="Parts" lazy="true" cascade="save-update">
			<key column="baz"/>
			<one-to-many class="Part"/>
		</bag>

		<component name="CollectionComponent">
			<component name="Nested">
				<property name="Str"/>
				<bag name="Foos" cascade="all">
					<key column="baz_compon_id"/>
					<one-to-many class="Foo"/>
				</bag>
				<bag name="Floats" table="baz_floats_bag">
					<key column="baz_compon_id"/>
					<!-- TODO: fix this to a Single -->
					<element type="Int64" column="float_value"/>
				</bag>
			</component>
		</component>

	</class>

	<class name="Sortable">
		<id name="id" unsaved-value="0">
			<generator class="native"/>
		</id>
		<property name="name"/>
	</class>

	<class name="Part"
		where="Description like 'x%'">
		<id name="Id" unsaved-value="0">
			<generator class="native"/>
		</id>
		<discriminator column="clazz"/>
		<property name="Description"/>
		<subclass name="Part+SpecialPart" />
	</class>

</hibernate-mapping>