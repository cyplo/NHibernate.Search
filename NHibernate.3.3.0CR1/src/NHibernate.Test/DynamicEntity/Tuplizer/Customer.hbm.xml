<?xml version="1.0" encoding="utf-8" ?>

<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
					   assembly="NHibernate.Test"
					   namespace="NHibernate.Test.DynamicEntity">

	<!--
        Mapping the Customer and Company interfaces.  Our custom Interceptor
        will be responsible for: 
		a) creating instances representing these interfaces; 
		b) determining the appropriate entity-name (i.e., which entity mapping to use) given an instance of one of these proxies.
    -->
    <class name="Person" table="t_person" discriminator-value="person" abstract="false">
        <tuplizer class="NHibernate.Test.DynamicEntity.Tuplizer.MyEntityTuplizer, NHibernate.Test" entity-mode="poco"/>
		<id name="Id">
            <generator class="native"/>
        </id>
        <discriminator force="false"/>
		<property name="Name"/>

        <many-to-one name="Address" cascade="all" column="addr_id"/>

        <set name="Family" lazy="true" cascade="all" generic="true">
            <key column="pers_id"/>
            <one-to-many class="Person"/>
        </set>

        <subclass name="Customer" discriminator-value="customer" abstract="false">
            <tuplizer class="NHibernate.Test.DynamicEntity.Tuplizer.MyEntityTuplizer, NHibernate.Test" entity-mode="poco"/>
            <many-to-one name="Company" cascade="none" column="comp_id"/>
    	</subclass>
    </class>

    <!-- Company interface mapping -->
	<class name="Company" table="t_company" abstract="false">
        <tuplizer class="NHibernate.Test.DynamicEntity.Tuplizer.MyEntityTuplizer, NHibernate.Test" entity-mode="poco"/>
		<id name="Id">
            <generator class="native"/>
        </id>
		<property name="Name"/>
	</class>

    <class name="Address" table="t_address" abstract="false">
        <tuplizer class="NHibernate.Test.DynamicEntity.Tuplizer.MyEntityTuplizer, NHibernate.Test" entity-mode="poco"/>
        <id name="Id">
            <generator class="native"/>
        </id>
        <property name="Street"/>
        <property name="City"/>
        <property name="PostalCode"/>
    </class>

</hibernate-mapping>
